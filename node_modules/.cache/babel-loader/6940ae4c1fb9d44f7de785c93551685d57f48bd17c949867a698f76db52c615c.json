{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kumar\\\\Desktop\\\\assessment app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [schemas, setSchemas] = useState([]);\n  const [selectedSchema, setSelectedSchema] = useState('');\n  const [availableSchemas, setAvailableSchemas] = useState([{\n    label: 'First Name',\n    value: 'first_name'\n  }, {\n    label: 'Last Name',\n    value: 'last_name'\n  }, {\n    label: 'Gender',\n    value: 'gender'\n  }, {\n    label: 'Age',\n    value: 'age'\n  }, {\n    label: 'Account Name',\n    value: 'account_name'\n  }, {\n    label: 'City',\n    value: 'city'\n  }, {\n    label: 'State',\n    value: 'state'\n  }]);\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: schemas.map(schema => ({\n        [schema.value]: schema.label\n      }))\n    };\n    fetch('https://webhook.site/350d841f-eefa-4dc5-ab9d-4e1572c31cfc', {\n      method: 'POST',\n      mode: 'no-cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response;\n    }).then(data => console.log('Success:', data)).catch(error => console.error('Error:', error));\n    setIsPopupVisible(false);\n  };\n  const handleAddSchema = () => {\n    if (selectedSchema) {\n      const schema = availableSchemas.find(s => s.value === selectedSchema);\n      setSchemas([...schemas, schema]);\n      setAvailableSchemas(availableSchemas.filter(s => s.value !== selectedSchema));\n      setSelectedSchema('');\n    }\n  };\n  const handleRemoveSchema = index => {\n    const removedSchema = schemas[index];\n    setSchemas(schemas.filter((_, i) => i !== index));\n    setAvailableSchemas([...availableSchemas, removedSchema]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View Audience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-segment-button\",\n      onClick: () => setIsPopupVisible(true),\n      children: \"Save segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Saving Segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter name of the segment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name of the segment\",\n            value: segmentName,\n            onChange: e => setSegmentName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"To save your segment, you need to add the schemas to build the query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `schemas-container ${schemas.length > 0 ? 'with-border' : ''}`,\n          children: schemas.map((schema, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: schema.value,\n              onChange: e => {\n                const newSchemaValue = e.target.value;\n                const newSchema = availableSchemas.find(s => s.value === newSchemaValue);\n                const updatedSchemas = schemas.map((s, i) => i === index ? newSchema : s);\n                setSchemas(updatedSchemas);\n                setAvailableSchemas([...availableSchemas.filter(s => s.value !== newSchemaValue), schemas[index]]);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: schema.value,\n                children: schema.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), availableSchemas.map((s, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: s.value,\n                children: s.label\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-schema-button\",\n              onClick: () => handleRemoveSchema(index),\n              children: \"\\u2212\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-schemas\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"add-schema-select\",\n            value: selectedSchema,\n            onChange: e => setSelectedSchema(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Add schema to segment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), availableSchemas.map((schema, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: schema.value,\n              children: schema.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-schema-button\",\n            onClick: handleAddSchema,\n            children: \"+Add new schema\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-button\",\n            onClick: handleSaveSegment,\n            children: \"Save the Segment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: () => setIsPopupVisible(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gfPzDU1/VoA7OZ4atfGVoWKCphY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","isPopupVisible","setIsPopupVisible","segmentName","setSegmentName","schemas","setSchemas","selectedSchema","setSelectedSchema","availableSchemas","setAvailableSchemas","label","value","handleSaveSegment","data","segment_name","schema","map","fetch","method","mode","headers","body","JSON","stringify","then","response","ok","Error","console","log","catch","error","handleAddSchema","find","s","filter","handleRemoveSchema","index","removedSchema","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","length","style","display","alignItems","newSchemaValue","newSchema","updatedSchemas","idx","_c","$RefreshReg$"],"sources":["C:/Users/kumar/Desktop/assessment app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [schemas, setSchemas] = useState([]);\n  const [selectedSchema, setSelectedSchema] = useState('');\n  const [availableSchemas, setAvailableSchemas] = useState([\n    { label: 'First Name', value: 'first_name' },\n    { label: 'Last Name', value: 'last_name' },\n    { label: 'Gender', value: 'gender' },\n    { label: 'Age', value: 'age' },\n    { label: 'Account Name', value: 'account_name' },\n    { label: 'City', value: 'city' },\n    { label: 'State', value: 'state' },\n  ]);\n\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: schemas.map(schema => ({ [schema.value]: schema.label })),\n    };\n\n    fetch('https://webhook.site/350d841f-eefa-4dc5-ab9d-4e1572c31cfc', {\n  method: 'POST',\n  mode: 'no-cors',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(data),\n})\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response;\n  })\n  .then(data => console.log('Success:', data))\n  .catch(error => console.error('Error:', error));\n\n\n    setIsPopupVisible(false);\n  };\n\n  const handleAddSchema = () => {\n    if (selectedSchema) {\n      const schema = availableSchemas.find(s => s.value === selectedSchema);\n      setSchemas([...schemas, schema]);\n      setAvailableSchemas(availableSchemas.filter(s => s.value !== selectedSchema));\n      setSelectedSchema('');\n    }\n  };\n\n  const handleRemoveSchema = (index) => {\n    const removedSchema = schemas[index];\n    setSchemas(schemas.filter((_, i) => i !== index));\n    setAvailableSchemas([...availableSchemas, removedSchema]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>View Audience</h2>\n      <button className=\"save-segment-button\" onClick={() => setIsPopupVisible(true)}>Save segment</button>\n      {isPopupVisible && (\n        <div className=\"popup\">\n          <div className=\"popup-content\">\n            <h2>Saving Segment</h2>\n            <div className='top-content'>\n            <p>Enter name of the segment</p>\n            <input\n              type=\"text\"\n              placeholder=\"Name of the segment\"\n              value={segmentName}\n              onChange={(e) => setSegmentName(e.target.value)}\n            />\n            <p>To save your segment, you need to add the schemas to build the query</p>\n            </div>\n            <div className={`schemas-container ${schemas.length > 0 ? 'with-border' : ''}`}>\n              {schemas.map((schema, index) => (\n                <div key={index} style={{ display: 'flex', alignItems: 'center' }}>\n                  <select\n                    value={schema.value}\n                    onChange={(e) => {\n                      const newSchemaValue = e.target.value;\n                      const newSchema = availableSchemas.find(s => s.value === newSchemaValue);\n                      const updatedSchemas = schemas.map((s, i) => (i === index ? newSchema : s));\n                      setSchemas(updatedSchemas);\n                      setAvailableSchemas([\n                        ...availableSchemas.filter(s => s.value !== newSchemaValue),\n                        schemas[index],\n                      ]);\n                    }}\n                  >\n                    <option value={schema.value}>{schema.label}</option>\n                    {availableSchemas.map((s, idx) => (\n                      <option key={idx} value={s.value}>{s.label}</option>\n                    ))}\n                  </select>\n                  <button className=\"remove-schema-button\" onClick={() => handleRemoveSchema(index)}>−</button>\n                </div>\n              ))}\n            </div>\n            <div className='select-schemas'>\n              <select\n                className=\"add-schema-select\"\n                value={selectedSchema}\n                onChange={(e) => setSelectedSchema(e.target.value)}\n              >\n                <option value=\"\">Add schema to segment</option>\n                {availableSchemas.map((schema, index) => (\n                  <option key={index} value={schema.value}>{schema.label}</option>\n                ))}\n              </select>\n            <button className=\"add-schema-button\" onClick={handleAddSchema}>+Add new schema</button>\n            </div>\n            <div className='bottom-buttons'>\n              <button className=\"save-button\" onClick={handleSaveSegment}>Save the Segment</button>\n              <button className=\"cancel-button\" onClick={() => setIsPopupVisible(false)}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}