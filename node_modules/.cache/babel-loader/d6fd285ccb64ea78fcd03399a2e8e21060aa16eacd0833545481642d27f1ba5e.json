{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kumar\\\\Desktop\\\\assessment app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [schemas, setSchemas] = useState([]);\n  const [selectedSchema, setSelectedSchema] = useState('');\n  const [availableSchemas, setAvailableSchemas] = useState([{\n    label: 'First Name',\n    value: 'first_name'\n  }, {\n    label: 'Last Name',\n    value: 'last_name'\n  }, {\n    label: 'Gender',\n    value: 'gender'\n  }, {\n    label: 'Age',\n    value: 'age'\n  }, {\n    label: 'Account Name',\n    value: 'account_name'\n  }, {\n    label: 'City',\n    value: 'city'\n  }, {\n    label: 'State',\n    value: 'state'\n  }]);\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: schemas.map(schema => ({\n        [schema.value]: schema.label\n      }))\n    };\n    fetch('https://webhook.site/your-webhook-url', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => console.log('Success:', data)).catch(error => console.error('Error:', error));\n    setIsPopupVisible(false);\n  };\n  const handleAddSchema = () => {\n    if (selectedSchema) {\n      const schema = availableSchemas.find(s => s.value === selectedSchema);\n      setSchemas([...schemas, schema]);\n      setAvailableSchemas(availableSchemas.filter(s => s.value !== selectedSchema));\n      setSelectedSchema('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsPopupVisible(true),\n      children: \"Save segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Saving Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name of the segment\",\n        value: segmentName,\n        onChange: e => setSegmentName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schemas-container\",\n        children: schemas.map((schema, index) => /*#__PURE__*/_jsxDEV(\"select\", {\n          value: schema.value,\n          onChange: e => {\n            const newSchemaValue = e.target.value;\n            const newSchema = availableSchemas.find(s => s.value === newSchemaValue);\n            const updatedSchemas = schemas.map((s, i) => i === index ? newSchema : s);\n            setSchemas(updatedSchemas);\n            setAvailableSchemas([...availableSchemas.filter(s => s.value !== newSchemaValue), schemas[index]]);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: schema.value,\n            children: schema.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), availableSchemas.map((s, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s.value,\n            children: s.label\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSchema,\n        onChange: e => setSelectedSchema(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Add schema to segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), availableSchemas.map((schema, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: schema.value,\n          children: schema.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSchema,\n        children: \"+Add new schema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveSegment,\n        children: \"Save the Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPopupVisible(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gfPzDU1/VoA7OZ4atfGVoWKCphY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","isPopupVisible","setIsPopupVisible","segmentName","setSegmentName","schemas","setSchemas","selectedSchema","setSelectedSchema","availableSchemas","setAvailableSchemas","label","value","handleSaveSegment","data","segment_name","schema","map","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","handleAddSchema","find","s","filter","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","index","newSchemaValue","newSchema","updatedSchemas","i","idx","_c","$RefreshReg$"],"sources":["C:/Users/kumar/Desktop/assessment app/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [schemas, setSchemas] = useState([]);\n  const [selectedSchema, setSelectedSchema] = useState('');\n  const [availableSchemas, setAvailableSchemas] = useState([\n    { label: 'First Name', value: 'first_name' },\n    { label: 'Last Name', value: 'last_name' },\n    { label: 'Gender', value: 'gender' },\n    { label: 'Age', value: 'age' },\n    { label: 'Account Name', value: 'account_name' },\n    { label: 'City', value: 'city' },\n    { label: 'State', value: 'state' },\n  ]);\n\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: schemas.map(schema => ({ [schema.value]: schema.label })),\n    };\n\n    fetch('https://webhook.site/your-webhook-url', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(response => response.json())\n      .then(data => console.log('Success:', data))\n      .catch(error => console.error('Error:', error));\n\n    setIsPopupVisible(false);\n  };\n\n  const handleAddSchema = () => {\n    if (selectedSchema) {\n      const schema = availableSchemas.find(s => s.value === selectedSchema);\n      setSchemas([...schemas, schema]);\n      setAvailableSchemas(availableSchemas.filter(s => s.value !== selectedSchema));\n      setSelectedSchema('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => setIsPopupVisible(true)}>Save segment</button>\n      {isPopupVisible && (\n        <div className=\"popup\">\n          <h2>Saving Segment</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Name of the segment\"\n            value={segmentName}\n            onChange={(e) => setSegmentName(e.target.value)}\n          />\n          <div className=\"schemas-container\">\n            {schemas.map((schema, index) => (\n              <select\n                key={index}\n                value={schema.value}\n                onChange={(e) => {\n                  const newSchemaValue = e.target.value;\n                  const newSchema = availableSchemas.find(s => s.value === newSchemaValue);\n                  const updatedSchemas = schemas.map((s, i) => (i === index ? newSchema : s));\n                  setSchemas(updatedSchemas);\n                  setAvailableSchemas([\n                    ...availableSchemas.filter(s => s.value !== newSchemaValue),\n                    schemas[index],\n                  ]);\n                }}\n              >\n                <option value={schema.value}>{schema.label}</option>\n                {availableSchemas.map((s, idx) => (\n                  <option key={idx} value={s.value}>{s.label}</option>\n                ))}\n              </select>\n            ))}\n          </div>\n          <select\n            value={selectedSchema}\n            onChange={(e) => setSelectedSchema(e.target.value)}\n          >\n            <option value=\"\">Add schema to segment</option>\n            {availableSchemas.map((schema, index) => (\n              <option key={index} value={schema.value}>{schema.label}</option>\n            ))}\n          </select>\n          <button onClick={handleAddSchema}>+Add new schema</button>\n          <button onClick={handleSaveSegment}>Save the Segment</button>\n          <button onClick={() => setIsPopupVisible(false)}>Cancel</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}